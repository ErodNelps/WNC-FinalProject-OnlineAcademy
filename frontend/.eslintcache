[{"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\index.js":"1","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\reportWebVitals.js":"2","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\store.js":"3","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\App\\index.js":"4","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\App\\footer.js":"5","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\addNewUser.js":"6","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\addNewCourse.js":"7","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\layout\\Home.js":"8","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\App\\context\\userContext.js":"9","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\addNewChapter.js":"10","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\index.js":"11","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\CourseItem\\courseDetail.js":"12","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\index.js":"13","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\NavBar\\index.js":"14","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Register\\index.js":"15","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Login\\index.js":"16","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\ShowCase\\highLight.js":"17","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\ShowCase\\latest.js":"18","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\ShowCase\\mostViewed.js":"19","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\studentCourse.js":"20","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\UserProfile.js":"21","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\App\\authOptions.js":"22","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\CourseItem\\index.js":"23","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\lecturerCourse.js":"24","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\adminDashboard.js":"25","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\course\\index.js":"26","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\category\\index.js":"27","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\user\\index.js":"28","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Carousel\\index.js":"29","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\utils\\errorHandler.js":"30","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\actions\\types.js":"31","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Search\\index.js":"32","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\CourseItem\\courseJoin.js":"33","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\CourseItem\\comment.js":"34"},{"size":603,"mtime":1610339208000,"results":"35","hashOfConfig":"36"},{"size":375,"mtime":1610339208000,"results":"37","hashOfConfig":"36"},{"size":278,"mtime":1610688207000,"results":"38","hashOfConfig":"36"},{"size":2825,"mtime":1610865950788,"results":"39","hashOfConfig":"36"},{"size":275,"mtime":1610339208000,"results":"40","hashOfConfig":"36"},{"size":2839,"mtime":1610752752119,"results":"41","hashOfConfig":"36"},{"size":3786,"mtime":1610752751976,"results":"42","hashOfConfig":"36"},{"size":690,"mtime":1610982446867,"results":"43","hashOfConfig":"36"},{"size":77,"mtime":1610339208000,"results":"44","hashOfConfig":"36"},{"size":7551,"mtime":1610863411336,"results":"45","hashOfConfig":"36"},{"size":230,"mtime":1610688207000,"results":"46","hashOfConfig":"36"},{"size":6785,"mtime":1610987335940,"results":"47","hashOfConfig":"36"},{"size":833,"mtime":1610752750872,"results":"48","hashOfConfig":"36"},{"size":3035,"mtime":1610955550930,"results":"49","hashOfConfig":"36"},{"size":3860,"mtime":1610339208000,"results":"50","hashOfConfig":"36"},{"size":2006,"mtime":1610339208000,"results":"51","hashOfConfig":"36"},{"size":922,"mtime":1610469469349,"results":"52","hashOfConfig":"36"},{"size":895,"mtime":1610470336200,"results":"53","hashOfConfig":"36"},{"size":919,"mtime":1610469599300,"results":"54","hashOfConfig":"36"},{"size":4778,"mtime":1610891130772,"results":"55","hashOfConfig":"36"},{"size":7812,"mtime":1610958137333,"results":"56","hashOfConfig":"36"},{"size":1753,"mtime":1610638043911,"results":"57","hashOfConfig":"36"},{"size":2401,"mtime":1610757246901,"results":"58","hashOfConfig":"36"},{"size":3169,"mtime":1610809914807,"results":"59","hashOfConfig":"36"},{"size":15033,"mtime":1610956130826,"results":"60","hashOfConfig":"36"},{"size":10911,"mtime":1610987214026,"results":"61","hashOfConfig":"36"},{"size":1293,"mtime":1610688207000,"results":"62","hashOfConfig":"36"},{"size":4681,"mtime":1610933882243,"results":"63","hashOfConfig":"36"},{"size":1467,"mtime":1610755186704,"results":"64","hashOfConfig":"36"},{"size":1188,"mtime":1610339208000,"results":"65","hashOfConfig":"36"},{"size":1052,"mtime":1610962232373,"results":"66","hashOfConfig":"36"},{"size":4783,"mtime":1610803096184,"results":"67","hashOfConfig":"36"},{"size":3206,"mtime":1610866016487,"results":"68","hashOfConfig":"36"},{"size":2930,"mtime":1610983971107,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"iwsu7b",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"72"},"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\index.js",[],["151","152"],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\reportWebVitals.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\store.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\App\\index.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\App\\footer.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\addNewUser.js",["153","154"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Axios from \"axios\";\nimport 'materialize-css';\n\nexport default function AddNewUser() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setPasswordCheck] = useState();\n    const [firstName, setFirstName] = useState();\n    const [lastName, setLastName] = useState();\n    const history = useHistory();\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        try {\n            const newUser = JSON.stringify({ email, password, firstName, lastName, passwordCheck });\n            await Axios.post(\n                \"http://localhost:8080/users/admin/add-new-user\", \n                newUser,\n                {headers:{\"Content-Type\" : \"application/json\"}}\n            ).then(res => {\n                alert(\"New user added!\")\n                history.push(\"/dashboard\");\n            })\n                \n        } catch (err) {\n            if(err != undefined)\n                alert(err.response.data.msg);\n        }\n    };\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"firstName\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"text\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"lastName\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"text\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"passwordCheck\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={passwordCheck}\n            onChange={(e) => setPasswordCheck(e.target.value)}\n          />\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" style={{marginTop:\"10px\"}}>\n          Register\n        </Button>\n      </Form>\n    </div>\n  )\n}","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\addNewCourse.js",["155","156"],"import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport Axios from \"axios\";\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css';\nimport userContext from \"../App/context/userContext\";\n\nexport default function AddNewCourse(){\n    const {userData} = useContext(userContext);\n    const history = useHistory();\n    const [title, setTitle] = useState();\n    const [briefDes, setBriefDes] = useState();\n    const [fullDes, setFullDes] = useState();\n    const [price, setPrice] = useState(0);\n    const [bonus, setBonus] = useState(0);\n    const [createdAt, setCreatedAt] = useState('');\n    const [numVideo, setNumVideo] = useState(0);\n    const thumbnailRef = useRef(null);\n    const children = [];\n    useEffect(() => {\n        setCreatedAt(getCurrentDate());\n    }, [])\n\n\n    const onAddChild = () => {\n        setNumVideo(numVideo + 1)\n    }\n\n    const handleSubmit = async (event) =>{\n        event.preventDefault();\n\n        try {\n            const thumbnail = new FormData()\n            thumbnail.append(\"thumbnail\", thumbnailRef.current.files[0])\n            const newCourse =  { title, briefDes, price, bonus, createdAt };\n            await Axios.post( \"http://localhost:8080/courses/upload-image\", thumbnail).then(()=>{ Axios.post(\n              \"http://localhost:8080/courses/add-new-course/\" + userData.user.id,\n              newCourse\n            ).then((res) => {\n                alert(\"New course posted successfully!\")\n                history.push(\"/dashboard\")\n            })\n        });\n            \n        } catch (err) {\n            alert(err.response.data.msg);\n        }\n    }\n\n    const getCurrentDate = () => {\n        var today = Date.now();\n        return today;\n    }\n    return (\n        <div className=\"Login\">\n            \n            <Form onSubmit={handleSubmit}>\n                <p className=\"label\">Add a new course</p>\n                <Form.Group size=\"lg\" controlId=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                    autoFocus\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.File type=\"file\" id=\"thumnail\" label=\"Thumbnail\" ref={thumbnailRef} />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"briefDes\">\n                    <Form.Label>Brief description</Form.Label>\n                    <Form.Control\n                    type=\"text\"\n                    value={briefDes}\n                    onChange={(e) => setBriefDes(e.target.value)}\n                    />\n                </Form.Group>\n                <ReactQuill theme=\"snow\" value={fullDes || ''} onchange={setFullDes}></ReactQuill>\n                <Form.Group size=\"lg\" controlId=\"price\">\n                    <Form.Label>Price</Form.Label>\n                    <Form.Control\n                    type=\"text\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"bonus\">\n                    <Form.Label>Bonus</Form.Label>\n                    <Form.Control\n                    type=\"text\"\n                    value={bonus}\n                    onChange={(e) => setBonus(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Button block size=\"lg\" type=\"submit\" style={{marginTop:\"10px\"}}>\n                    Post\n                </Button>\n            </Form>\n        </div>\n    )\n}","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\layout\\Home.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\App\\context\\userContext.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\addNewChapter.js",["157","158"],"import React, {useState, useContext, useEffect,  useMemo} from \"react\";\nimport {useHistory} from 'react-router-dom'\nimport {useDropzone} from 'react-dropzone';\nimport 'react-quill/dist/quill.snow.css';\nimport userContext from \"../App/context/userContext\";\nimport './style.css'\nimport Axios from \"axios\";\nimport { ProgressBar, Divider, Modal, Button, CollectionItem, Collection } from \"react-materialize\";   \nimport {Col, Row} from 'react-bootstrap';\nimport 'materialize-css'\nimport ReactPlayer from 'react-player'\nimport {connect } from 'react-redux'\nimport store from '../../redux/store'\nimport {fetchCourseSeleccted, fetchSyllabus} from '../../redux/course'\n\nconst AddNewChapter = ({courseSelected = {}, syllabus = []})=> {\n    const {userData} = useContext(userContext);\n    const [uploading, setuploading] = useState(false);\n    const [name, setName] = useState('');\n    let history = useHistory();\n    let id = history.location.pathname.replace('/addchapter/','');\n    useEffect(() =>{\n        store.dispatch(fetchCourseSeleccted(id))\n        if(userData.user) {\n            store.dispatch(fetchSyllabus(id))\n        }\n    },[syllabus])\n    const children = [];\n\n    const [vidID, setVID] = useState(null);\n    const fetchMedia = (id) => {\n        setVID(id);\n    }\n\n    const {\n        acceptedFiles,\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({accept: 'video/*', enctype: \"multipart/form-data\", name: \"chapter\"});\n    \n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n        }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n\n    const acceptedFileItems = acceptedFiles.map(file => (\n        <li key={file.path}>\n          {file.path} - {Math.ceil(file.size/1024)} KB\n        </li>\n      ));\n\n    // for (var i = 0; i < numVideo; i += 1) {\n    //     children.push(<TextInput id={i} type=\"file\" label={`Chapter ${i + 2}`}/>);\n    // };\n\n    // const onAddChild = () => {\n    //     setNumVideo(numVideo + 1)\n    // }\n\n    const handleSubmit = async (event) =>{\n        event.preventDefault();\n        if(!userData.user){\n            return\n        }\n        \n        try {\n            if(name === \"\"){\n                alert(\"Please enter a name!\")\n                return\n            } else {\n                setuploading(true);\n                const data = new FormData()\n                acceptedFiles.forEach(file => {\n                    data.append(\"chapter\", file)\n                    data.append(\"name\", name)\n                })\n\n                Axios.post(\"http://localhost:8080/courses/add-chapter/upload/\" + id, data).then((res =>{\n                    setuploading(false)\n                    alert(\"Chapter added\")\n                }))\n                store.dispatch(fetchCourseSeleccted(id))\n                store.dispatch(fetchSyllabus(id))\n            }\n        } catch (err) {\n            alert(err)\n            setuploading(false)\n        }\n        \n    }\n\n    return (\n        <div className=\"edit-container\">\n            <Row>\n                <Row className=\"label\" style={{marginLeft: \"10px\", marginRight:\"auto\"}}><h4>Edit course</h4></Row>\n                <Col xs={6}>\n                    {/* <Button variant=\"primary\" onClick={handleShow}>Add new video</Button> */}\n                    <Modal actions={[<Button flat modal=\"close\" node=\"button\" waves=\"green\">Close</Button>]}\n                        bottomSheet={false}\n                        fixedFooter={false}\n                        header=\"Modal Header\"\n                        id=\"Modal-0\"\n                        open={false}\n                        options={{\n                            dismissible: true,\n                            endingTop: '10%',\n                            inDuration: 250,\n                            onCloseEnd: null,\n                            onCloseStart: null,\n                            onOpenEnd: null,\n                            onOpenStart: null,\n                            opacity: 0.5,\n                            outDuration: 250,\n                            preventScrolling: true,\n                            startingTop: '4%'\n                        }}\n                        trigger={<Button node=\"button\" style={{marginLeft: \"10px\", marginRight:\"auto\"}}>Add new chapter</Button>}\n                        >\n                            <input type=\"text\" placeholder=\"Name...\" value={name} onChange={(e) => setName(e.target.value)}></input>\n                        <section className=\"container\">\n                            <div {...getRootProps({style})}>\n                                <input {...getInputProps()} />\n                                <p>Drag & drop your videos here, or click to select files</p>\n                            </div>\n                            <aside>\n                                <h5>Accepted videos</h5>\n                                <ul >{acceptedFileItems}</ul>\n                            </aside>\n                            {uploading? <ProgressBar />: <></>}\n                            <Button block size={\"lg\"} onClick={(e) => handleSubmit(e)}>\n                                Upload\n                            </Button>\n                        </section>\n                    </Modal>\n                </Col>\n                <Col>\n                <Row>\n                    <Col>\n                        <Collection className=\"file-list\">\n                        {syllabus ? <>{syllabus.map((vid) => (\n                        <CollectionItem onClick={() => fetchMedia(vid.id)} key={vid.id}>{vid.name} </CollectionItem>\n                        ))}</> : <></>}\n                        </Collection>\n                    </Col>\n                </Row>\n                    {vidID ? <ReactPlayer url={\"http://localhost:8080/media/vid/\" + vidID} controls={true}></ReactPlayer> : <></>}\n                    <Divider/>\n                </Col>\n            </Row>\n            \n            {/* <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                <Modal.Title>Add new video</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose} className=\"edit-button\">\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal> */}\n        </div>\n    )\n}\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#1f1f1f',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n  };\n  \n  const activeStyle = {\n    borderColor: '#2196f3'\n  };\n  \n  const acceptStyle = {\n    borderColor: '#00e676'\n  };\n  \n  const rejectStyle = {\n    borderColor: '#ff1744'\n  };\n  \n  \nconst mapStateToProps = state =>{\n    const courseSelected = state.courseReducer.courseSelected;\n    const syllabus = state.courseReducer.syllabus;\n\n    return {courseSelected, syllabus}\n};\n\nexport default connect (mapStateToProps)(AddNewChapter)\n","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\index.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\CourseItem\\courseDetail.js",["159","160","161","162"],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\index.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\NavBar\\index.js",["163","164","165","166","167"],"import React, { useState, useEffect } from 'react';\r\nimport {Navbar, Icon } from 'react-materialize'\r\nimport { Form, FormControl } from 'react-bootstrap'\r\nimport Dropdown from 'react-multilevel-dropdown'\r\nimport 'materialize-css'\r\nimport AuthOptions from '../App/authOptions'\r\nimport './style.css'\r\nimport {fetchAllCategory} from '../../redux/category'\r\nimport {connect } from 'react-redux'\r\nimport store from '../../redux/store'\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst NavBar = ({categories = []}) => {\r\n  const [searchText, setSearchText] = useState();\r\n  useEffect(() => {\r\n    store.dispatch(fetchAllCategory());\r\n  }, [])\r\n  const history = useHistory()\r\n  function keyPress(e){\r\n    if(e.charCode === 13){\r\n       let query = \"/search?q=\" + e.target.value;\r\n       history.push(query)\r\n    }\r\n }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Navbar\r\n          alignLinks=\"right\"\r\n          className=\"nav-menu\"\r\n          brand={<Link className=\"brand-logo\" to=\"/\">Online Academy</Link>}\r\n          id=\"mobile-nav\"\r\n          menuIcon={<Icon>menu</Icon>}\r\n          options={{\r\n            draggable: false,\r\n            edge: 'right',\r\n            inDuration: 250,\r\n            onCloseEnd: null,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            outDuration: 200,\r\n            preventScrolling: true\r\n          }}>\r\n          <Dropdown menuClassName=\"dropdown-menu\" wrapperClassName=\"dropdown-wrapper\" buttonClassName=\"dropdown-button\" className=\"dropdown\" title='Category'>\r\n            {categories ? <>{categories.map((category, index) => (<Link to={\"/category/\" + `${category.category}`} key={index}>\r\n              <Dropdown.Item className=\"dropdown-item\"  key={index} name={category.category}>{category.category} \r\n              <SubMenu subcats={category.subCategories} key={index}></SubMenu>\r\n            </Dropdown.Item></Link>))}</> : <></>}\r\n          </Dropdown>\r\n          {/* <Form inline>\r\n              <FormControl type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)} placeholder=\"Search\" className=\"mr-sm-2\" onKeyPress={keyPress}/>\r\n          </Form> */}\r\n          <div className=\"search-bar\">\r\n            <input type=\"text\" name=\"query\" value={ searchText } id=\"search\" placeholder=\"Search...\" onKeyPress={keyPress}/>\r\n          </div>\r\n          <AuthOptions></AuthOptions>\r\n        </Navbar>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction SubMenu({subcats = []}){\r\n    return (\r\n      <Dropdown.Submenu>\r\n        {subcats.map((category, index) => (\r\n        <Link key={index} style={{backgroundColor: \"transparent\", color: \"#111111\"}} to={\"/subcat/\"+`${category.name}`}><Dropdown.Item  key={index} name={category.name}>{category.name}</Dropdown.Item></Link>))}\r\n      </Dropdown.Submenu>)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const categories =  state.categoryReducer.categories;\r\n  return {\r\n      categories\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar)","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Register\\index.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Login\\index.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\ShowCase\\highLight.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\ShowCase\\latest.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\ShowCase\\mostViewed.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\studentCourse.js",["168","169"],"import React, { useContext, useEffect, useState } from 'react'\nimport 'materialize-css'\nimport {Tab, Tabs, Table, Button} from 'react-materialize'\nimport userContext from '../App/context/userContext'\nimport {connect} from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {fetchStudentSubList, fetchStudentWatchlist} from '../../redux/user'\nimport store from '../../redux/store'\nconst StudentCourse = ({watchList=[], subList = []}) => {\n    const { userData } = useContext(userContext);\n\n    useEffect(() => {\n        store.dispatch(fetchStudentWatchlist(userData.user.id))\n        store.dispatch(fetchStudentSubList(userData.user.id))\n    },[]);\n\n    return(\n        <Tabs className=\"tabs z-depth-1\">\n            <Tab className=\"tab\" active\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"Watchlist\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th data-field=\"id\">\n                                    Name\n                                </th>\n                                <th data-field=\"name\">\n                                    Subcription count\n                                </th>\n                                <th data-field=\"price\">\n                                    Status\n                                </th>\n                                <th data-field=\"price\">\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {watchList ? \n                            (<>{watchList.map((course, index) => (<tr key={index}>\n                                <td>\n                                    <Link key=\"1\" to={\"/course/\"+ course._id}>{course.title}</Link>\n                                </td>\n                                <td>\n                                    {course.subCount}\n                                </td>\n                                <td>\n                                    {course.status}\n                                </td>\n                                <td>\n                                   <Button style={{marginRight: \"10px\"}}><i className=\"fa fa-trash\" aria-hidden=\"true\" onClick={() =>{}}></i></Button>\n                                </td>\n                            </tr>))}</>) : <></>}\n                        </tbody>\n                    </Table>\n                </Tab>\n                <Tab className=\"tab\"\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"Subcription\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th data-field=\"id\">\n                                    Name\n                                </th>\n                                <th data-field=\"name\">\n                                    Subcription count\n                                </th>\n                                <th data-field=\"price\">\n                                    Status\n                                </th>\n                                <th data-field=\"price\">\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {subList ? \n                            (<>{subList.map((course, index) => (<tr key={index}>\n                                <td>\n                                    <Link key=\"1\" to={\"/course/\"+ course._id}>{course.title}</Link>\n                                </td>\n                                <td>\n                                    {course.subCount}\n                                </td>\n                                <td>\n                                    {course.status}\n                                </td>\n                                <td>\n                                   <Button style={{marginRight: \"10px\"}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\n                                </td>\n                            </tr>))}</>) : <></>}\n                        </tbody>\n                    </Table>\n                </Tab>\n            \n        </Tabs>\n    )    \n}\n\nconst mapStateToProps = state => {\n    const watchList = state.userReducer.watchList;\n    const subList = state.userReducer.subList;\n    return {\n        watchList, subList\n    }\n}\n\nexport default connect(mapStateToProps)(StudentCourse)","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\UserProfile.js",["170","171","172","173","174"],"import React, { useContext, useState } from 'react'\nimport 'materialize-css'\nimport {Row, Col, Divider, Button, Modal} from 'react-materialize'\nimport './style.css'\nimport userContext from '../App/context/userContext'\nimport Axios from 'axios'\nexport default function UserProfile(){\n    const {userData} = useContext(userContext);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [newEmail, setNewEmail] = useState('');\n    const changePassword = (e) =>{\n        e.preventDefault();\n    }\n    \n    const handleChangeName = (e) => {\n        e.preventDefault();\n        if(firstName == '' || lastName == ''){\n            alert(\"First name or last name is missing!\");\n            return\n        }\n        if(firstName.length < 2 || lastName.length < 2){\n            alert('Name has to be at least 2 characters longs')\n            return\n        }\n        try{\n            Axios.post(\"http://localhost:8080/change-name/\" + userData.user.id, {firstName, lastName}).then(res =>{\n                alert('Name changed successfully')\n            }).catch((error) => {\n                alert(error.response.data.error)\n            })\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    const isEmail = (email) => {\n        const re = /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*$/;\n        return re.test(email);\n    }\n    const handleChangeEmail = (e) => {\n        e.preventDefault();\n        if(!isEmail(newEmail)){\n            alert(newEmail + \"is not a real email.\")\n            return\n        }\n        try{\n            Axios.put(\"http://localhost:8080/users/change-email/\" + userData.user.id, {email: newEmail}).then(res =>{\n                alert('Email changed successfully')\n            }).catch((error) => {\n                alert(error.response.data.msg)\n            })\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return(\n        <div>\n            {userData.user ? \n            (<><Row>\n                <Col className=\"thumbnail\" >\n                    <>\n                        {(userData.user.role==='student' || userData.user.role==='lecturer') ? (<img className=\"detail-thumbnail\" src=\"user-student.png\" width=\"200\" height=\"200\"></img>) : \n                        (<img className=\"detail-thumbnail\" src=\"user-lecturer.png\" width=\"200\" height=\"200\"></img>)}\n                    </>\n                </Col>\n                <Col className=\"detail-description\" s={9}>\n                    <div >\n                        <Row> <div className=\"course-name\"> <p className=\"label\">Name: {userData.user.firstName} {userData.user.lastName} \n                        <Modal actions={[<Button flat modal=\"close\" node=\"button\" waves=\"green\">Close</Button>]}\n                                                bottomSheet={false}\n                                                fixedFooter={false}\n                                                header=\"Change name\"\n                                                id=\"Modal-0\"\n                                                open={false}\n                                                options={{\n                                                    dismissible: true,\n                                                    endingTop: '10%',\n                                                    inDuration: 250,\n                                                    onCloseEnd: null,\n                                                    onCloseStart: null,\n                                                    onOpenEnd: null,\n                                                    onOpenStart: null,\n                                                    opacity: 0.5,\n                                                    outDuration: 250,\n                                                    preventScrolling: true,\n                                                    startingTop: '4%'\n                                                }}\n                                                trigger={<Button style={{marginRight: \"10px\"}}><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></Button>}\n                                                >\n                                                    <input type=\"text\" placeholder=\"First Name...\" value={firstName} onChange={(e) => setFirstName(e.target.value)}></input>\n                                                    <input type=\"text\" placeholder=\"LastName...\" value={lastName} onChange={(e) => setLastName(e.target.value)}></input>\n                                                    <Button block size={\"lg\"} onClick={(e) => handleChangeName(e)}>\n                                                        Change\n                                                    </Button>\n                                            </Modal>\n                        </p></div> </Row>\n                        <Row> <div className=\"course-name\"> <p className=\"label\">Email: {userData.user.email} \n                        <Modal actions={[<Button flat modal=\"close\" node=\"button\" waves=\"green\">Close</Button>]}\n                                                bottomSheet={false}\n                                                fixedFooter={false}\n                                                header=\"Change email\"\n                                                id=\"Modal-0\"\n                                                open={false}\n                                                options={{\n                                                    dismissible: true,\n                                                    endingTop: '10%',\n                                                    inDuration: 250,\n                                                    onCloseEnd: null,\n                                                    onCloseStart: null,\n                                                    onOpenEnd: null,\n                                                    onOpenStart: null,\n                                                    opacity: 0.5,\n                                                    outDuration: 250,\n                                                    preventScrolling: true,\n                                                    startingTop: '4%'\n                                                }}\n                                                trigger={<Button style={{marginRight: \"10px\"}}><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></Button>}\n                                                >\n                                                    <input type=\"text\" placeholder=\"Email...\" value={newEmail} onChange={(e) => setNewEmail(e.target.value)}></input>\n                                                    <Button block size={\"lg\"} onClick={(e) => handleChangeEmail(e)}>\n                                                        Change\n                                                    </Button>\n                                            </Modal>\n                        </p></div> </Row>\n                        <Row> <div className=\"course-name\"> <p className=\"label\">Password: <Button onClick={changePassword} style={{marginRight: \"10px\"}}>Change Password</Button></p></div> </Row>\n                    </div>\n                </Col>\n            </Row>\n            <Divider/></>) : <h2>You are not logged in</h2>}\n        </div>\n    )\n    \n}","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\App\\authOptions.js",["175","176","177"],"import React, { useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"./context/userContext\";\r\nimport {Button, Divider, Dropdown} from 'react-materialize'\r\nimport 'materialize-css'\r\nimport './style.css'\r\n\r\nexport default function AuthOptions() {\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const register = () => history.push(\"/register\");\r\n  const login = () => history.push(\"/login\");\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n    });\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {userData.user ? (\r\n        <Dropdown\r\n        id=\"Dropdown_user\"\r\n        options={{\r\n          alignment: 'left',\r\n          autoTrigger: true,\r\n          closeOnClick: true,\r\n          constrainWidth: true,\r\n          container: null,\r\n          coverTrigger: false,\r\n          hover: false,\r\n          inDuration: 150,\r\n          onCloseEnd: null,\r\n          onCloseStart: null,\r\n          onOpenEnd: null,\r\n          onOpenStart: null,\r\n          outDuration: 250\r\n        }}\r\n        trigger={<a style={{display: \"block\" }}><img src=\"user-student.png\" style={{ height:\"45px\", width: \"45px\"}}/></a>}\r\n        >\r\n          <Link to=\"/dashboard\" >Dashboard</Link>\r\n          <a onClick={logout} >Log out</a>\r\n        <Divider></Divider>\r\n      </Dropdown>\r\n        \r\n        ) : (\r\n          <>\r\n              <Button onClick={register} style={{marginRight: \"10px\"}}>Sign up</Button>\r\n              <Button onClick={login} style={{marginRight: \"10px\"}}>Log in</Button>\r\n            </>\r\n          )}\r\n    </React.Fragment>\r\n  );\r\n}","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\CourseItem\\index.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\lecturerCourse.js",["178"],"import React, {useContext, useEffect} from 'react'\nimport 'materialize-css'\nimport {Tab, Tabs, Button, Table} from 'react-materialize'\nimport { Link } from 'react-router-dom'\nimport {fetchLecturerCourse} from '../../redux/user'\nimport {connect } from 'react-redux'\nimport store from '../../redux/store'\nimport userContext from '../App/context/userContext'\n\nconst LecturerCourse = ({lecturerCourse = []}) =>{\n    const { userData } = useContext(userContext);\n\n    useEffect(() => {\n        store.dispatch(fetchLecturerCourse(userData.user.id))\n    },[]);\n    const handleAddCourse = () =>{\n\n    }\n\n    return(\n        <>\n        \n        <Tabs className=\"tabs z-depth-1\">\n        <Tab className=\"tab\" active\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"My course\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th data-field=\"id\">\n                                    Name\n                                </th>\n                                <th data-field=\"name\">\n                                    Subcription count\n                                </th>\n                                <th data-field=\"status\">\n                                    Status\n                                </th>\n                                <th data-field=\"price\">\n                                <Link to=\"/addnewcourse\">\n                                    <Button onClick={handleAddCourse}>Post new course</Button>\n                                </Link>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {lecturerCourse ? \n                            (<>{lecturerCourse.map((course, index) => (<tr key={index}>\n                                <td>\n                                <Link key=\"1\" to={\"/course/\"+ course._id}>{course.title}</Link>\n                                </td>\n                                <td>\n                                    {course.subCount}\n                                </td>\n                                <td>\n                                    {course.status}\n                                </td>\n                                <td>\n                                <Link to={\"/addchapter/\" + course._id}><Button style={{marginRight: \"10px\"}}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Button></Link>\n                                   <Button style={{marginRight: \"10px\"}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\n                                </td>\n                            </tr>))}</>) : <></>}\n                        </tbody>\n                    </Table>\n                </Tab>\n        </Tabs>\n        </>\n    )    \n}\n\nconst mapStateToProps = state => {\n    const lecturerCourse = state.userReducer.lecturerCourse;\n    return {\n         lecturerCourse\n    }\n}\n\nexport default connect(mapStateToProps)(LecturerCourse)","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Dashboard\\adminDashboard.js",["179","180","181"],"import React, { useEffect, useState } from 'react'\nimport 'materialize-css'\nimport { Tabs, Tab, Table, Button, Modal } from 'react-materialize'\nimport { Link } from 'react-router-dom'\nimport './style.css'\nimport {fetchAllUser} from '../../redux/user'\nimport {fetchAllCourse} from '../../redux/course'\nimport {fetchAllCategory} from '../../redux/category'\nimport store from '../../redux/store'\nimport {connect} from 'react-redux'\nimport Axios from 'axios'\n\nconst AdminDashboard = ({users = [], courses = [], categories= []}) =>{\n    const [catName, setCatName] = useState('')\n    const [subcatName, setSubCatName] = useState('')\n    useEffect(_ =>{\n        store.dispatch(fetchAllUser());\n        store.dispatch(fetchAllCourse());\n        store.dispatch(fetchAllCategory());\n    }, []);\n\n    useEffect(_ =>{\n        store.dispatch(fetchAllCategory());\n    }, [categories]);\n\n    const handleSubmitNewCat = (e) => {\n        e.preventDefault();\n        if(catName == ''){\n            alert(\"Please enter a name!\");\n            return\n        }\n        if(catName.length < 2){\n            alert('Name has to be at least 2 character longs')\n            return\n        }\n        try{\n            Axios.post(\"http://localhost:8080/category/add\", {catName}).then(res =>{\n                alert(catName + ' category has been added')\n            }).catch((error) => {\n                alert(error.response.data.msg)\n            })\n        } catch (err) {\n            console.log(err);\n        }\n        \n    }\n\n    const handleSubmitNewSubCat = (e, catID) => {\n        e.preventDefault();\n        if(subcatName == ''){\n            alert(\"Please enter a name!\");\n            return\n        }\n        if(subcatName.length < 2){\n            alert('Name has to be at least 2 character longs')\n            return\n        }\n        try{\n            Axios.post(\"http://localhost:8080/subcategory/add\", {subcatName, catID}).then(res =>{\n                alert(subcatName + ' sub-category has been added')\n            }).catch((error) => {\n                alert(error.response.data.error)\n            })\n        } catch (err) {\n            console.log(err);\n        }     \n    }\n\n    const handleDeleteSubcat = (e, catID, name) =>{\n\n    }\n\n    const handleDeleteCat = (e, catID, catName) =>{\n        e.preventDefault();\n        try{\n            Axios.delete(\"http://localhost:8080/category/delete/\"+ catID).then(res =>{\n                alert(catName + 'category has been delete')\n            }).catch((error) => {\n                alert(error.response.data.error)\n            })\n        } catch (err) {\n            console.log(err);\n        }\n    }\n    return(\n            <Tabs className=\"tabs z-depth-1\">\n                <Tab active className=\"tab\"\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"Category\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th data-field=\"id\">\n                                    Category\n                                </th>\n                                <th data-field=\"name\">\n                                    Sub-categories\n                                </th>\n                                <th data-field=\"price\">\n                                <Modal actions={[<Button flat modal=\"close\" node=\"button\" waves=\"green\">Close</Button>]}\n                                                bottomSheet={false}\n                                                fixedFooter={false}\n                                                header=\"Add new category\"\n                                                id=\"Modal-0\"\n                                                open={false}\n                                                options={{\n                                                    dismissible: true,\n                                                    endingTop: '10%',\n                                                    inDuration: 250,\n                                                    onCloseEnd: null,\n                                                    onCloseStart: null,\n                                                    onOpenEnd: null,\n                                                    onOpenStart: null,\n                                                    opacity: 0.5,\n                                                    outDuration: 250,\n                                                    preventScrolling: true,\n                                                    startingTop: '4%'\n                                                }}\n                                                trigger={<Button style={{marginRight: \"10px\"}}><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></Button>}\n                                                >\n                                                    <input type=\"text\" placeholder=\"Enter new category name...\" value={catName} onChange={(e) => setCatName(e.target.value)}></input>\n                                                    <Button block size={\"lg\"} onClick={(e) => handleSubmitNewCat(e)}>\n                                                        Add\n                                                    </Button>\n                                            </Modal>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                                {categories? <>{categories.map((category, index) =>(\n                                    <tr key={index}>\n                                        <td>\n                                            {category.category}\n                                        </td>\n                                        <td>\n                                            {category.subCategories ? <>{category.subCategories.map((subcategory, index) => (\n                                                <p>\n                                                    {subcategory.name}\n                                                </p>\n                                            ))}</> : <></>}\n                                        </td>\n                                        <td>\n                                            \n                                            <Modal actions={[<Button flat modal=\"close\" node=\"button\" waves=\"green\">Close</Button>]}\n                                                bottomSheet={false}\n                                                fixedFooter={false}\n                                                header={\"Add new sub-category for \" + category.category}\n                                                id=\"Modal-0\"\n                                                open={false}\n                                                options={{\n                                                    dismissible: true,\n                                                    endingTop: '10%',\n                                                    inDuration: 250,\n                                                    onCloseEnd: null,\n                                                    onCloseStart: null,\n                                                    onOpenEnd: null,\n                                                    onOpenStart: null,\n                                                    opacity: 0.5,\n                                                    outDuration: 250,\n                                                    preventScrolling: true,\n                                                    startingTop: '4%'\n                                                }}\n                                                trigger={<Button style={{marginRight: \"10px\"}}><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>}\n                                                >\n                                                    <p>Do you want to delete {category.category}</p>\n                                                    <Button block size={\"lg\"} onClick={(e) => handleDeleteCat(e, category._id, category.category)}>\n                                                        Delete\n                                                    </Button>\n                                            </Modal>\n                                            <Modal actions={[<Button flat modal=\"close\" node=\"button\" waves=\"green\">Close</Button>]}\n                                                bottomSheet={false}\n                                                fixedFooter={false}\n                                                header={\"Add new sub-category for \" + category.category}\n                                                id=\"Modal-0\"\n                                                open={false}\n                                                options={{\n                                                    dismissible: true,\n                                                    endingTop: '10%',\n                                                    inDuration: 250,\n                                                    onCloseEnd: null,\n                                                    onCloseStart: null,\n                                                    onOpenEnd: null,\n                                                    onOpenStart: null,\n                                                    opacity: 0.5,\n                                                    outDuration: 250,\n                                                    preventScrolling: true,\n                                                    startingTop: '4%'\n                                                }}\n                                                trigger={<Button style={{marginRight: \"10px\"}}><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></Button>}\n                                                >\n                                                    <input type=\"text\" placeholder=\"Enter new sub-category name...\" value={subcatName} onChange={(e) => setSubCatName(e.target.value)}></input>\n                                                    <Button block size={\"lg\"} onClick={(e) => handleSubmitNewSubCat(e, category._id)}>\n                                                        Add\n                                                    </Button>\n                                            </Modal>\n                                        </td>\n                                    </tr>\n                                ))}</> \n                                :<></>}\n                        </tbody>\n                    </Table>\n                </Tab>\n                <Tab className=\"tab\"\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"Course\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th data-field=\"id\">\n                                    Name\n                                </th>\n                                <th data-field=\"name\">\n                                    Subcription count\n                                </th>\n                                <th data-field=\"price\">\n                                    Status\n                                </th>\n                                <th data-field=\"price\">\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {courses ? \n                            (<>{courses.map((course, index) => (<tr key={index}>\n                                <td>\n                                    <Link key=\"1\" to={\"/course/\"+ course._id}>{course.title}</Link>\n                                </td>\n                                <td>\n                                    {course.subCount}\n                                </td>\n                                <td>\n                                    {course.status}\n                                </td>\n                                <td>\n                                   <Button style={{marginRight: \"10px\"}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\n                                </td>\n                            </tr>))}</>) : <></>}\n                        </tbody>\n                    </Table>\n                </Tab>\n                <Tab className=\"tab\"\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"User\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th data-field=\"id\">\n                                    Name\n                                </th>\n                                <th data-field=\"name\">\n                                    Email\n                                </th>\n                                <th data-field=\"role\">\n                                    Role\n                                </th>\n                                <th>\n                                <Link to=\"/addnewuser\"><Button style={{marginRight: \"10px\"}}><i className=\"fa fa-plus\" aria-hidden=\"true\" ></i></Button></Link>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {users ? \n                            (<>{users.map((user, index) => (<tr key={index}>\n                                <td>\n                                    {user.firstName} {user.lastName}\n                                </td>\n                                <td>\n                                    {user.email}\n                                </td>\n                                <td>\n                                    {user.role}\n                                </td>\n                                <td>\n                                   <Button style={{marginRight: \"10px\"}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\n                                   <Button style={{marginRight: \"10px\"}}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Button>\n                                </td>\n                            </tr>))}</>) : <></>}\n                        </tbody>\n                    </Table>\n                </Tab>\n            </Tabs>\n    )\n}\n\nconst mapStateToProps = state => {\n    const users = state.userReducer.users;\n    const courses = state.courseReducer.courses;\n    const categories =  state.categoryReducer.categories;\n    return {\n        users, courses, categories\n    }\n}\n\nexport default connect(mapStateToProps)(AdminDashboard)","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\course\\index.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\category\\index.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\user\\index.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Carousel\\index.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\utils\\errorHandler.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\redux\\actions\\types.js",[],"P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\Search\\index.js",["182","183","184","185","186","187"],"import React, { useEffect, useState } from 'react';\r\nimport 'materialize-css'\r\nimport { Pagination, Preloader, Icon } from 'react-materialize';\r\nimport CourseItem from '../CourseItem';\r\nimport './style.css';\r\nimport Axios from 'axios'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Search () {\r\n    const [searchResult, setResult] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [totalResults, setTotalResults] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [currentPageNo, setCurrentPageNo] = useState(0);\r\n    const [refinements, setRefinements] =useState([])\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const history =useHistory()\r\n    \r\n    const getPageCount = (total, denom) => {\r\n        const divisible = 0 === total %denom;\r\n        const valueTobeAdded = divisible ? 0 : 1;\r\n        return Math.floor(total/denom) + valueTobeAdded;\r\n    };\r\n    const handlePageClick = (event, type) => {\r\n        event.preventDefault();\r\n        const updatePageNo = 'prev' === type\r\n\t\t\t? setCurrentPageNo(currentPageNo - 1)\r\n\t\t\t: setCurrentPageNo(currentPageNo + 1);\r\n\r\n\t\tif(!loading) {\r\n            setLoading(true);\r\n            fetchSearchResult(updatePageNo, query);\r\n\t\t}\r\n    };\r\n\r\n    const fetchSearchResult = (updatedPageNo = '',query) => {\r\n        const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : '';\r\n        const searchUrl = `http://localhost:8080/courses/search?q=${query}${pageNumber}`\r\n        let results = []\r\n        if(query === ''){\r\n            alert (\"Please enter search terms!\")\r\n            return\r\n        }\r\n        Axios.get(searchUrl).then(res => {\r\n            if(res.data.length == 0){\r\n                setMessage(\"No search results found for \" + query)\r\n                setResult([])\r\n                return\r\n            }\r\n            for(var i in res.data){\r\n                var data = res.data[i];\r\n                results.push({_id: data._id, thumbnail: data.thumbnail, title: data.title, briefDes : data.briefDes, fullDes : data.fullDes, \r\n                    rating : data.rating, rateCount: data.rateCount,subCount: data.subCount, price: data.price,\r\n                    bonus: data.bonus, status: data.status, views: data.views, createdAt: data.createdAt, updatedAt: data.updatedAt})\r\n            };\r\n            const total = results.length;\r\n            const totalPagesCount = getPageCount(total, 5);\r\n            \r\n            setResult(results);\r\n            setTotalResults(total);\r\n            setTotalPages(totalPagesCount);\r\n            setCurrentPageNo(updatedPageNo);\r\n            setLoading(false);\r\n            setMessage('');\r\n        }).catch(err => {\r\n            setLoading(false);\r\n            if(err) { alert(err) }\r\n        })     \r\n    }\r\n\r\n    const keypress = (e) =>{\r\n        if(e.charCode === 13){\r\n            history.push({\r\n                pathname: '/search',\r\n                search: '?q=' + query\r\n              })\r\n            fetchSearchResult(1, query)          \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setQuery(urlParams.get('q'));\r\n        fetchSearchResult(1, query)\r\n    },[]);\r\n\r\n    // useEffect(() => {\r\n    //     fetchSearchResult(1, query)\r\n    // }, [urlParams.get('q')]);\r\n\r\n    return(\r\n        <div className=\"container\">\r\n\t\t\t{/*\tHeading*/}\r\n\t\t\t<h2 className=\"heading\">Search results</h2>\r\n\t\t\t{/* Search Input*/}\r\n\t\t\t<label className=\"search-label\" htmlFor={\"search-input\"}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"query\"\r\n\t\t\t\t\tvalue={ query }\r\n\t\t\t\t\tid=\"search-input\"\r\n\t\t\t\t\tplaceholder=\"Search...\" onChange={(e) => setQuery(e.target.value)} onKeyPress={keypress}\r\n\t\t\t\t/>\r\n\t\t\t\t<i className=\"fa fa-search search-icon\" aria-hidden=\"true\"/>\r\n\t\t\t</label>\r\n\r\n\t\t\t{/*\tError Message*/}\r\n\t\t\t\t{message? <p className=\"message\">{ message }</p>:<></>}\r\n\t\t\t{/*Navigation*/}\r\n\t\t\t{/* <PageNavigation\r\n\t\t\t\tloading={loading}\r\n\t\t\t\tshowPrevLink={showPrevLink}\r\n\t\t\t\tshowNextLink={showNextLink}\r\n\t\t\t\thandlePrevClick={ () => handlePageClick('prev')}\r\n\t\t\t\thandleNextClick={ () => handlePageClick('next')}\r\n\t\t\t/> */}\r\n            {loading ? <Preloader /> : \r\n                (<>\r\n                    <div className=\"results-container\">\r\n                        {searchResult.map((course) => (\r\n                            <CourseItem key={course._id} course={course}></CourseItem>\r\n                            ))}\r\n                    </div></>)}\r\n\t\t\t{/*Navigation*/}\r\n\t\t\t<Pagination\r\n            activePage={currentPageNo}\r\n            items={totalPages}\r\n            leftBtn={<Icon>chevron_left</Icon>}\r\n            rightBtn={<Icon>chevron_right</Icon>}/>\r\n        </div>\r\n    )\r\n}","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\CourseItem\\courseJoin.js",["188","189","190","191","192"],"import React, {useState, useContext, useEffect,  useMemo} from \"react\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDropzone} from 'react-dropzone';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport userContext from \"../App/context/userContext\";\r\nimport './style.css'\r\nimport Axios from \"axios\";\r\nimport { Divider, Collection, CollectionItem } from \"react-materialize\";   \r\nimport {Col, Row} from 'react-bootstrap';\r\nimport 'materialize-css'\r\nimport ReactPlayer from 'react-player'\r\nimport {connect } from 'react-redux'\r\nimport store from '../../redux/store'\r\nimport {fetchCourseSeleccted, fetchSyllabus} from '../../redux/course'\r\n\r\nconst CourseJoin = ({courseSelected = {}, syllabus = []})=> {\r\n    const {userData} = useContext(userContext);\r\n    let history = useHistory();\r\n    let id = history.location.pathname.replace('/join/','');\r\n    useEffect(() =>{\r\n        store.dispatch(fetchCourseSeleccted(id))\r\n        if(userData.user) {\r\n            store.dispatch(fetchSyllabus(id))\r\n        }\r\n    },[])\r\n    const children = [];\r\n\r\n    const [vidID, setVID] = useState(null);\r\n    const fetchMedia = (id) => {\r\n        setVID(id);\r\n    }\r\n\r\n\r\n    // for (var i = 0; i < numVideo; i += 1) {\r\n    //     children.push(<TextInput id={i} type=\"file\" label={`Chapter ${i + 2}`}/>);\r\n    // };\r\n\r\n    // const onAddChild = () => {\r\n    //     setNumVideo(numVideo + 1)\r\n    // }\r\n\r\n    return (\r\n        <div className=\"edit-container\">\r\n            <Row>\r\n            <Row className=\"label\" style={{marginLeft: \"10px\", marginRight:\"auto\"}}><h4>{courseSelected.title}</h4></Row>\r\n            <Col>\r\n                <Row>\r\n                    <Col>\r\n                        <Collection className=\"file-list\">\r\n                        {syllabus ? <>{syllabus.map((vid) => (\r\n                        <CollectionItem onClick={() => fetchMedia(vid.id)} key={vid.id}>{vid.name} </CollectionItem>\r\n                        ))}</> : <></>}\r\n                        </Collection>\r\n                    </Col>\r\n                </Row>\r\n                    {vidID ? <ReactPlayer url={\"http://localhost:8080/media/vid/\" + vidID} controls={true}></ReactPlayer> : <></>}\r\n                    <Divider/>\r\n                </Col>\r\n            </Row>\r\n            \r\n            {/* <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Add new video</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose} className=\"edit-button\">\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal> */}\r\n        </div>\r\n    )\r\n}\r\n  \r\nconst mapStateToProps = state =>{\r\n    const courseSelected = state.courseReducer.courseSelected;\r\n    const syllabus = state.courseReducer.syllabus;\r\n\r\n    return {courseSelected, syllabus}\r\n};\r\n\r\nexport default connect (mapStateToProps)(CourseJoin)\r\n","P:\\Program Files\\AdvancedWeb\\Final\\WNC-FinalProject-OnlineAcademy\\frontend\\src\\components\\CourseItem\\comment.js",["193","194","195","196","197"],"import React, { useContext, useState } from 'react';\r\nimport userContext from '../App/context/userContext'\r\nimport './style.css'\r\nimport 'materialize-css'\r\nimport {Button} from 'react-bootstrap'\r\nimport Ratings from 'react-ratings-declarative';\r\n\r\nexport default function CommentBox({comments = [], courseID=''}){\r\n    const {userData, setUserData} = useContext(userContext)\r\n    const [comment, setComment] = useState('');\r\n    const [rating, setRating] = useState('');\r\n    \r\n    // constructor() {\r\n    //   super();\r\n      \r\n    //   this.state = {\r\n    //     showComments: false,\r\n    //     comments: [\r\n    //       {id: 1, author: \"landiggity\", body: \"This is my first comment on this forum so don't be a dick\"},\r\n    //       {id: 2, author: \"scarlett-jo\", body: \"That's a mighty fine comment you've got there my good looking fellow...\"},\r\n    //       {id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"}\r\n    //     ]\r\n    //   };\r\n    // }\r\n    \r\n    // render () {\r\n    //   const comments = this._getComments();\r\n    //   let commentNodes;\r\n    //   let buttonText = 'Show Comments';\r\n      \r\n    //   if (this.state.showComments) {\r\n    //     buttonText = 'Hide Comments';\r\n    //     commentNodes = <div className=\"comment-list\">{comments}</div>;\r\n    //   }\r\n    const handleSummitComment = () =>{\r\n\r\n    }\r\n\r\n    return(\r\n    <div className=\"comment-box\">\r\n        <h3>Rate course \r\n            {/* <Ratings rating={rating} widgetRatedColors=\"blue\"changeRating={(newRating) => setRating(newRating)}>\r\n                <Ratings.Widget />\r\n                <Ratings.Widget />\r\n                <Ratings.Widget widgetDimension=\"60px\" svgIconViewBox=\"0 0 5 5\" svgIconPath=\"M2 1 h1 v1 h1 v1 h-1 v1 h-1 v-1 h-1 v-1 h1 z\" />\r\n                <Ratings.Widget widgetHoverColor=\"black\" />\r\n                <Ratings.Widget />\r\n            </Ratings> */}\r\n        </h3>\r\n        {/* {comment form} */}\r\n        <form className=\"comment-form\" onSubmit={handleSummitComment}>\r\n          <div className=\"comment-form-fields\">\r\n            <textarea placeholder=\"Comment\" rows=\"4\" required value={comment} onChange={(e) => setComment(e.target.value)}></textarea>\r\n          </div>\r\n          <div className=\"comment-form-actions\">\r\n            <Button type=\"submit\">Post Comment & Rating</Button>\r\n          </div>\r\n        </form>\r\n        {/* {buttonText} */}\r\n        <h4>Comments</h4>\r\n        <h4 className=\"comment-count\">\r\n        {/* {this._getCommentsTitle(comments.length)} */}\r\n        </h4>\r\n        {/* Map comment here*/}\r\n        {comments ? <>{comments.map((comment, index) => (\r\n            <div key={index} className=\"comment\">\r\n                <p className=\"comment-header\">{comment.userFirstName} {comment.userLastName}</p>\r\n                <p className=\"comment-body\">- {comment.comment}</p>\r\n            </div>\r\n        ))}</> : <></>}\r\n        \r\n    </div>  \r\n    );\r\n}",{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":37},{"ruleId":"206","severity":1,"message":"207","line":31,"column":20,"nodeType":"208","messageId":"209","endLine":31,"endColumn":22},{"ruleId":"202","severity":1,"message":"210","line":21,"column":11,"nodeType":"204","messageId":"205","endLine":21,"endColumn":19},{"ruleId":"202","severity":1,"message":"211","line":27,"column":11,"nodeType":"204","messageId":"205","endLine":27,"endColumn":21},{"ruleId":"212","severity":1,"message":"213","line":27,"column":7,"nodeType":"214","endLine":27,"endColumn":17,"suggestions":"215"},{"ruleId":"202","severity":1,"message":"210","line":28,"column":11,"nodeType":"204","messageId":"205","endLine":28,"endColumn":19},{"ruleId":"202","severity":1,"message":"216","line":1,"column":40,"nodeType":"204","messageId":"205","endLine":1,"endColumn":48},{"ruleId":"202","severity":1,"message":"217","line":11,"column":8,"nodeType":"204","messageId":"205","endLine":11,"endColumn":13},{"ruleId":"212","severity":1,"message":"213","line":26,"column":7,"nodeType":"214","endLine":26,"endColumn":17,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":96,"column":21,"nodeType":"221","endLine":98,"endColumn":52},{"ruleId":"202","severity":1,"message":"222","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"223","line":3,"column":16,"nodeType":"204","messageId":"205","endLine":3,"endColumn":27},{"ruleId":"202","severity":1,"message":"224","line":14,"column":22,"nodeType":"204","messageId":"205","endLine":14,"endColumn":35},{"ruleId":"225","severity":1,"message":"226","line":47,"column":90,"nodeType":"208","messageId":"227","endLine":47,"endColumn":91},{"ruleId":"225","severity":1,"message":"226","line":69,"column":100,"nodeType":"208","messageId":"227","endLine":69,"endColumn":101},{"ruleId":"202","severity":1,"message":"216","line":1,"column":40,"nodeType":"204","messageId":"205","endLine":1,"endColumn":48},{"ruleId":"212","severity":1,"message":"228","line":15,"column":7,"nodeType":"214","endLine":15,"endColumn":9,"suggestions":"229"},{"ruleId":"206","severity":1,"message":"230","line":18,"column":22,"nodeType":"208","messageId":"209","endLine":18,"endColumn":24},{"ruleId":"206","severity":1,"message":"230","line":18,"column":40,"nodeType":"208","messageId":"209","endLine":18,"endColumn":42},{"ruleId":"231","severity":1,"message":"232","line":37,"column":20,"nodeType":"233","messageId":"209","endLine":37,"endColumn":532},{"ruleId":"219","severity":1,"message":"220","line":63,"column":97,"nodeType":"221","endLine":63,"endColumn":179},{"ruleId":"219","severity":1,"message":"220","line":64,"column":26,"nodeType":"221","endLine":64,"endColumn":109},{"ruleId":"234","severity":1,"message":"235","line":44,"column":18,"nodeType":"221","endLine":44,"endColumn":49},{"ruleId":"219","severity":1,"message":"220","line":44,"column":49,"nodeType":"221","endLine":44,"endColumn":118},{"ruleId":"234","severity":1,"message":"235","line":47,"column":11,"nodeType":"221","endLine":47,"endColumn":32},{"ruleId":"212","severity":1,"message":"228","line":15,"column":7,"nodeType":"214","endLine":15,"endColumn":9,"suggestions":"236"},{"ruleId":"206","severity":1,"message":"230","line":28,"column":20,"nodeType":"208","messageId":"209","endLine":28,"endColumn":22},{"ruleId":"206","severity":1,"message":"230","line":50,"column":23,"nodeType":"208","messageId":"209","endLine":50,"endColumn":25},{"ruleId":"202","severity":1,"message":"237","line":69,"column":11,"nodeType":"204","messageId":"205","endLine":69,"endColumn":29},{"ruleId":"202","severity":1,"message":"238","line":14,"column":12,"nodeType":"204","messageId":"205","endLine":14,"endColumn":24},{"ruleId":"202","severity":1,"message":"239","line":17,"column":12,"nodeType":"204","messageId":"205","endLine":17,"endColumn":23},{"ruleId":"202","severity":1,"message":"240","line":17,"column":25,"nodeType":"204","messageId":"205","endLine":17,"endColumn":39},{"ruleId":"202","severity":1,"message":"241","line":26,"column":11,"nodeType":"204","messageId":"205","endLine":26,"endColumn":26},{"ruleId":"206","severity":1,"message":"230","line":47,"column":32,"nodeType":"208","messageId":"209","endLine":47,"endColumn":34},{"ruleId":"212","severity":1,"message":"242","line":86,"column":7,"nodeType":"214","endLine":86,"endColumn":9,"suggestions":"243"},{"ruleId":"202","severity":1,"message":"244","line":1,"column":50,"nodeType":"204","messageId":"205","endLine":1,"endColumn":57},{"ruleId":"202","severity":1,"message":"245","line":3,"column":9,"nodeType":"204","messageId":"205","endLine":3,"endColumn":20},{"ruleId":"202","severity":1,"message":"217","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":13},{"ruleId":"212","severity":1,"message":"213","line":25,"column":7,"nodeType":"214","endLine":25,"endColumn":9,"suggestions":"246"},{"ruleId":"202","severity":1,"message":"210","line":26,"column":11,"nodeType":"204","messageId":"205","endLine":26,"endColumn":19},{"ruleId":"202","severity":1,"message":"247","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":15},{"ruleId":"202","severity":1,"message":"248","line":9,"column":12,"nodeType":"204","messageId":"205","endLine":9,"endColumn":20},{"ruleId":"202","severity":1,"message":"249","line":9,"column":22,"nodeType":"204","messageId":"205","endLine":9,"endColumn":33},{"ruleId":"202","severity":1,"message":"250","line":11,"column":12,"nodeType":"204","messageId":"205","endLine":11,"endColumn":18},{"ruleId":"202","severity":1,"message":"251","line":11,"column":20,"nodeType":"204","messageId":"205","endLine":11,"endColumn":29},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'children' is assigned a value but never used.","'onAddChild' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'userData.user'. Either include them or remove the dependency array.","ArrayExpression",["254"],"'useState' is defined but never used.","'Axios' is defined but never used.",["255"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'FormControl' is defined but never used.","'setSearchText' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'userData.user.id'. Either include it or remove the dependency array.",["256"],"Expected '===' and instead saw '=='.","no-control-regex","Unexpected control character(s) in regular expression: \\x00, \\x0d, \\x00, \\x00, \\x0d, \\x00, \\x00, \\x0d, \\x00, \\x00, \\x0d, \\x00.","Literal","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["257"],"'handleDeleteSubcat' is assigned a value but never used.","'totalResults' is assigned a value but never used.","'refinements' is assigned a value but never used.","'setRefinements' is assigned a value but never used.","'handlePageClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchSearchResult', 'query', and 'urlParams'. Either include them or remove the dependency array.",["258"],"'useMemo' is defined but never used.","'useDropzone' is defined but never used.",["259"],"'Ratings' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'rating' is assigned a value but never used.","'setRating' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"264","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},"Update the dependencies array to be: [id, syllabus, userData.user]",{"range":"271","text":"272"},"Update the dependencies array to be: [comments, id, userData.user]",{"range":"273","text":"274"},"Update the dependencies array to be: [userData.user.id]",{"range":"275","text":"276"},{"range":"277","text":"276"},"Update the dependencies array to be: [fetchSearchResult, query, urlParams]",{"range":"278","text":"279"},"Update the dependencies array to be: [id, userData.user]",{"range":"280","text":"281"},[1130,1140],"[id, syllabus, userData.user]",[1214,1224],"[comments, id, userData.user]",[653,655],"[userData.user.id]",[549,551],[3287,3289],"[fetchSearchResult, query, urlParams]",[1020,1022],"[id, userData.user]"]