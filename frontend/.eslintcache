[{"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/index.js":"1","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/reportWebVitals.js":"2","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/store.js":"3","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/App/index.js":"4","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/index.js":"5","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/App/footer.js":"6","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/addNewUser.js":"7","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/addNewCourse.js":"8","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/addNewChapter.js":"9","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/layout/Home.js":"10","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/layout/Search.js":"11","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/CourseItem/courseDetail.js":"12","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/App/context/userContext.js":"13","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/index.js":"14","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Register/index.js":"15","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/NavBar/index.js":"16","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Login/index.js":"17","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/ShowCase/highLight.js":"18","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/ShowCase/latest.js":"19","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/ShowCase/mostViewed.js":"20","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/user/index.js":"21","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/category/index.js":"22","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/course/index.js":"23","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/UserProfile.js":"24","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/studentCourse.js":"25","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/CourseItem/index.js":"26","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/adminDashboard.js":"27","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/lecturerCourse.js":"28","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/App/authOptions.js":"29","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/utils/errorHandler.js":"30","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/actions/types.js":"31","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Carousel/index.js":"32"},{"size":583,"mtime":1610684383209,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1610684383209,"results":"35","hashOfConfig":"34"},{"size":278,"mtime":1610684383209,"results":"36","hashOfConfig":"34"},{"size":2670,"mtime":1610684383205,"results":"37","hashOfConfig":"34"},{"size":230,"mtime":1610684383209,"results":"38","hashOfConfig":"34"},{"size":263,"mtime":1610684383205,"results":"39","hashOfConfig":"34"},{"size":2839,"mtime":1610684383209,"results":"40","hashOfConfig":"34"},{"size":3786,"mtime":1610684383209,"results":"41","hashOfConfig":"34"},{"size":3413,"mtime":1610685672090,"results":"42","hashOfConfig":"34"},{"size":656,"mtime":1610684383209,"results":"43","hashOfConfig":"34"},{"size":978,"mtime":1610684383209,"results":"44","hashOfConfig":"34"},{"size":5993,"mtime":1610687417610,"results":"45","hashOfConfig":"34"},{"size":75,"mtime":1610684383205,"results":"46","hashOfConfig":"34"},{"size":833,"mtime":1610684383209,"results":"47","hashOfConfig":"34"},{"size":3741,"mtime":1610684383209,"results":"48","hashOfConfig":"34"},{"size":2688,"mtime":1610684383209,"results":"49","hashOfConfig":"34"},{"size":1940,"mtime":1610684383209,"results":"50","hashOfConfig":"34"},{"size":890,"mtime":1610684383209,"results":"51","hashOfConfig":"34"},{"size":863,"mtime":1610684383209,"results":"52","hashOfConfig":"34"},{"size":887,"mtime":1610684383209,"results":"53","hashOfConfig":"34"},{"size":4675,"mtime":1610684383209,"results":"54","hashOfConfig":"34"},{"size":1293,"mtime":1610684383209,"results":"55","hashOfConfig":"34"},{"size":10865,"mtime":1610686428221,"results":"56","hashOfConfig":"34"},{"size":1405,"mtime":1610684383209,"results":"57","hashOfConfig":"34"},{"size":4232,"mtime":1610684383209,"results":"58","hashOfConfig":"34"},{"size":1144,"mtime":1610684383205,"results":"59","hashOfConfig":"34"},{"size":6300,"mtime":1610684383209,"results":"60","hashOfConfig":"34"},{"size":2908,"mtime":1610684383209,"results":"61","hashOfConfig":"34"},{"size":1695,"mtime":1610684383205,"results":"62","hashOfConfig":"34"},{"size":1153,"mtime":1610684383209,"results":"63","hashOfConfig":"34"},{"size":1007,"mtime":1610684383209,"results":"64","hashOfConfig":"34"},{"size":1415,"mtime":1610684383205,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1jz40gg",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/index.js",[],["144","145"],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/reportWebVitals.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/store.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/App/index.js",["146"],"import { useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router';\nimport {BrowserRouter} from 'react-router-dom'\nimport Axios from 'axios'\nimport NavBar from '../NavBar';\nimport Home from '../layout/Home'\n\nimport Login from '../Login'\nimport Register from '../Register'\nimport Dashboard from '../Dashboard'\nimport WebFooter from '../App/footer'\nimport CourseDetail from '../CourseItem/courseDetail'\nimport UserContext from \"./context/userContext\";\nimport './style.css'\nimport AddNewCourse from '../Dashboard/addNewCourse';\nimport Search from '../layout/Search'\nimport AddNewUser from '../Dashboard/addNewUser';\nimport AddNewChapter from \"../Dashboard/addNewChapter\";\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  const history = useHistory();\n\n  useEffect(_ => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await Axios.post(\n        \"http://localhost:8080/users/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get(\"http://localhost:8080/users/\", {\n          headers: { \"x-auth-token\": token },\n        });\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n    };\n\n\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <>\n      <BrowserRouter>\n        <UserContext.Provider value={{userData,setUserData}}>\n            <div className=\"App\">\n              <NavBar />\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home></Home>     \n                </Route>\n                <Route path=\"/login\"> <Login/> </Route>\n                <Route path=\"/register\"> <Register/> </Route>\n                <Route path=\"/dashboard\"> <Dashboard/> </Route>\n                <Route path=\"/addnewcourse\"> <AddNewCourse/></Route>\n                <Route path=\"/course/:id\"><CourseDetail></CourseDetail></Route>\n                <Route path=\"/addnewuser\"><AddNewUser></AddNewUser></Route>\n                <Route path=\"/addchapter/:id\"><AddNewChapter></AddNewChapter></Route>\n                <Route path=\"/search/query=:searchText\"><Search></Search></Route>\n                <Route path=\"/category/:catID\"><Search></Search></Route>\n                <Route path=\"/subcat/:subcatID\"></Route>\n              </Switch>\n              <WebFooter/>\n            </div>\n        </UserContext.Provider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/index.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/App/footer.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/addNewUser.js",["147","148"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Axios from \"axios\";\nimport 'materialize-css';\n\nexport default function AddNewUser() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setPasswordCheck] = useState();\n    const [firstName, setFirstName] = useState();\n    const [lastName, setLastName] = useState();\n    const history = useHistory();\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        try {\n            const newUser = JSON.stringify({ email, password, firstName, lastName, passwordCheck });\n            await Axios.post(\n                \"http://localhost:8080/users/admin/add-new-user\", \n                newUser,\n                {headers:{\"Content-Type\" : \"application/json\"}}\n            ).then(res => {\n                alert(\"New user added!\")\n                history.push(\"/dashboard\");\n            })\n                \n        } catch (err) {\n            if(err != undefined)\n                alert(err.response.data.msg);\n        }\n    };\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"firstName\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"text\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"lastName\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"text\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"passwordCheck\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={passwordCheck}\n            onChange={(e) => setPasswordCheck(e.target.value)}\n          />\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" style={{marginTop:\"10px\"}}>\n          Register\n        </Button>\n      </Form>\n    </div>\n  )\n}","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/addNewCourse.js",["149","150"],"import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'\nimport Axios from \"axios\";\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css';\nimport userContext from \"../App/context/userContext\";\n\nexport default function AddNewCourse(){\n    const {userData} = useContext(userContext);\n    const history = useHistory();\n    const [title, setTitle] = useState();\n    const [briefDes, setBriefDes] = useState();\n    const [fullDes, setFullDes] = useState();\n    const [price, setPrice] = useState(0);\n    const [bonus, setBonus] = useState(0);\n    const [createdAt, setCreatedAt] = useState('');\n    const [numVideo, setNumVideo] = useState(0);\n    const thumbnailRef = useRef(null);\n    const children = [];\n    useEffect(() => {\n        setCreatedAt(getCurrentDate());\n    }, [])\n\n\n    const onAddChild = () => {\n        setNumVideo(numVideo + 1)\n    }\n\n    const handleSubmit = async (event) =>{\n        event.preventDefault();\n\n        try {\n            const thumbnail = new FormData()\n            thumbnail.append(\"thumbnail\", thumbnailRef.current.files[0])\n            const newCourse =  { title, briefDes, price, bonus, createdAt };\n            await Axios.post( \"http://localhost:8080/courses/upload-image\", thumbnail).then(()=>{ Axios.post(\n              \"http://localhost:8080/courses/add-new-course/\" + userData.user.id,\n              newCourse\n            ).then((res) => {\n                alert(\"New course posted successfully!\")\n                history.push(\"/dashboard\")\n            })\n        });\n            \n        } catch (err) {\n            alert(err.response.data.msg);\n        }\n    }\n\n    const getCurrentDate = () => {\n        var today = Date.now();\n        return today;\n    }\n    return (\n        <div className=\"Login\">\n            \n            <Form onSubmit={handleSubmit}>\n                <p className=\"label\">Add a new course</p>\n                <Form.Group size=\"lg\" controlId=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                    autoFocus\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.File type=\"file\" id=\"thumnail\" label=\"Thumbnail\" ref={thumbnailRef} />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"briefDes\">\n                    <Form.Label>Brief description</Form.Label>\n                    <Form.Control\n                    type=\"text\"\n                    value={briefDes}\n                    onChange={(e) => setBriefDes(e.target.value)}\n                    />\n                </Form.Group>\n                <ReactQuill theme=\"snow\" value={fullDes || ''} onchange={setFullDes}></ReactQuill>\n                <Form.Group size=\"lg\" controlId=\"price\">\n                    <Form.Label>Price</Form.Label>\n                    <Form.Control\n                    type=\"text\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"bonus\">\n                    <Form.Label>Bonus</Form.Label>\n                    <Form.Control\n                    type=\"text\"\n                    value={bonus}\n                    onChange={(e) => setBonus(e.target.value)}\n                    />\n                </Form.Group>\n\n                <Button block size=\"lg\" type=\"submit\" style={{marginTop:\"10px\"}}>\n                    Post\n                </Button>\n            </Form>\n        </div>\n    )\n}","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/addNewChapter.js",["151","152"],"import React, {useState, useContext, useEffect, useRef, useMemo} from \"react\";\nimport {useHistory} from 'react-router-dom'\nimport {useDropzone} from 'react-dropzone';\nimport Button from 'react-bootstrap/Button'\nimport 'react-quill/dist/quill.snow.css';\nimport userContext from \"../App/context/userContext\";\nimport './style.css'\nimport Axios from \"axios\";\nimport { ProgressBar } from \"react-materialize\";\nimport 'materialize-css'\n\nexport default function AddNewChapter(){\n    const {userData} = useContext(userContext);\n    const [uploading, setuploading] = useState(false)\n    let history = useHistory()\n    let id = history.location.pathname.replace('/addchapter','')\n    const children = [];\n    const {\n        acceptedFiles,\n        getRootProps,\n        getInputProps,\n        isDragActive,\n        isDragAccept,\n        isDragReject\n    } = useDropzone({accept: 'video/*', enctype: \"multipart/form-data\", name: \"chapter\"});\n    \n    const style = useMemo(() => ({\n        ...baseStyle,\n        ...(isDragActive ? activeStyle : {}),\n        ...(isDragAccept ? acceptStyle : {}),\n        ...(isDragReject ? rejectStyle : {})\n        }), [\n        isDragActive,\n        isDragReject,\n        isDragAccept\n    ]);\n\n    const acceptedFileItems = acceptedFiles.map(file => (\n        <li key={file.path}>\n          {file.path} - {Math.ceil(file.size/1024)} KB\n        </li>\n      ));\n    useEffect(() => {\n    })\n\n    const chapterRef = useRef(null);\n\n    // for (var i = 0; i < numVideo; i += 1) {\n    //     children.push(<TextInput id={i} type=\"file\" label={`Chapter ${i + 2}`}/>);\n    // };\n\n    // const onAddChild = () => {\n    //     setNumVideo(numVideo + 1)\n    // }\n\n    const handleSubmit = async (event) =>{\n        event.preventDefault();\n        if(!userData.user){\n            return\n        }\n        setuploading(true)\n        try {\n            const data = new FormData()\n\n            acceptedFiles.forEach(file => {\n                data.append(\"chapter\", file)\n            })\n\n            Axios.post(\"http://localhost:8080/courses/add-chapter/upload/\" + id, data).then((res =>{\n                setuploading(false)\n                alert(\"Chapter added\")\n            }))\n\n        } catch (err) {\n            alert(err)\n            setuploading(false)\n        }\n        \n    }\n\n    return (\n        <section className=\"container\">\n            {/* {children} */}\n            <div {...getRootProps({style})}>\n                <input {...getInputProps()} />\n                <p>Drag & drop your videos here, or click to select files</p>\n            </div>\n            <aside>\n                <h5>Accepted videos</h5>\n                <ul>{acceptedFileItems}</ul>\n            </aside>\n            {uploading? <ProgressBar />: <></>}\n            <Button block size={\"lg\"} onClick={(e) => handleSubmit(e)}>\n                Upload\n            </Button>\n        </section>\n    )\n}\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n  };\n  \n  const activeStyle = {\n    borderColor: '#2196f3'\n  };\n  \n  const acceptStyle = {\n    borderColor: '#00e676'\n  };\n  \n  const rejectStyle = {\n    borderColor: '#ff1744'\n  };\n  ","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/layout/Home.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/layout/Search.js",["153","154"],"import React, { useEffect, useState } from 'react';\nimport 'materialize-css'\nimport { Row, Preloader } from 'react-materialize';\nimport CourseItem from '../CourseItem';\nimport './style.css';\nimport {connect } from 'react-redux'\nimport store from '../../redux/store'\nimport { fetchSearchResults } from '../../redux/course';\nconst Search = ({searchResult = []})=> {\n    \n    useEffect(() => {\n       store.dispatch(fetchSearchResults())\n    }, []);\n\n    return(\n        <div>\n            {searchResult ? <Preloader /> : \n                (<>\n                    <ul>\n                        {searchResult.map((course) => (\n                            <CourseItem key={course._id} course={course}></CourseItem>\n                            ))}\n                    </ul></>)}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    const searchResult = state.courseReducer.searchResult;\n    return {\n        searchResult\n    }\n}\n\nexport default connect(mapStateToProps)(Search)","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/CourseItem/courseDetail.js",["155","156"],"import React, { useContext, useEffect, useState } from 'react'\nimport 'materialize-css'\nimport { Row, Col, Divider, Button} from 'react-materialize'\nimport { connect } from 'react-redux'\nimport './style.css'\nimport userContext from '../App/context/userContext'\nimport store from '../../redux/store'\nimport { checkIsSubbed, fetchCourseSeleccted, checkIsWatched, checkMyCourse, addWatchList, subscribeToCourse, fetchSyllabus } from '../../redux/course'\nimport { useHistory } from 'react-router-dom'\nimport ReactPlayer from 'react-player'\n\nconst CourseDetail = ({courseSelected, isSubbed, isWatched, isMine, syllabus = []}) =>{\n    const {userData} = useContext(userContext);\n    let history = useHistory()\n    let id = history.location.pathname.replace('/course/','')\n    useEffect(() =>{\n        store.dispatch(fetchCourseSeleccted(id))\n        if(userData.user) {\n                store.dispatch(checkMyCourse(userData.user.id, id))\n                store.dispatch(checkIsSubbed(userData.user.id, id))\n                store.dispatch(checkIsWatched(userData.user.id, id))\n                store.dispatch(fetchSyllabus(id))\n        }\n    },[])\n    const handleAnynomous = () =>{\n        if(userData.user){\n\n        }\n        else{\n            alert(\"You have to log in!\");\n        }\n    }\n\n    const handleBuyBtn = () =>{\n        if(userData.user){\n\n        }\n        else{\n            alert(\"You have to log in!\");\n        }\n    }\n\n    const handleJoin = () =>{\n        if(userData.user){\n            store.dispatch(subscribeToCourse(userData.user.id, id))\n        }\n        else{\n            alert(\"You have to log in!\");\n        }\n    }\n\n    const handleUnadded = () =>{\n        if(userData.user){\n\n        }\n        else{\n            alert(\"You have to log in!\");\n        }\n    }\n\n    const handleWatchlist = async () =>{\n        if(userData.user){\n            store.dispatch(addWatchList(userData.user.id, id))\n        }\n        else{\n            alert(\"You have to log in!\");\n        }\n    }\n\n    const [vidID, setVID] = useState(null);\n    const fetchMedia = (id) => {\n        setVID(id);\n    }\n\n    return(\n        <div className=\"course-detail\">\n            {courseSelected ? \n            (<><Row>\n                <Col className=\"thumbnail\" >\n                    <img className=\"detail-thumbnail\"\n                    src={courseSelected.thumbnail} \n                    maxwidth=\"200\" maxheight=\"200\"></img>\n                </Col>\n                <Col className=\"detail-description\" s={9}>\n                    <div >\n                        <Row> <div className=\"course-name\">{courseSelected.title}</div> </Row>\n                        <Row><div>{courseSelected.briefDes}</div></Row>\n                        <Row>Rating: {courseSelected.rating}</Row>\n                        {/* {userData.user ? (<>{isSubbed ? <Button style={{marginLeft:\"10px\"}} onClick={handleJoin}>Join</Button>: <Button onClick={handleBuyBtn}>Buy course</Button>}</>) :\n                            <Button onClick={handleAnynomous}>Buy course</Button>}\n                        {userData.user ? (<>{isWatched? <Button style={{marginLeft:\"10px\"}} onClick={handleUnadded}>Added to watchlist</Button> : <Button onClick={handleWatchlist}>Watchlist</Button>}</>) :\n                            <></>} */}\n                        {userData.user ? <>{isMine ? <Button className=\"fa fa-pencil\" onClick={handleBuyBtn} style={{marginLeft:\"10px\"}} ></Button> : \n                                                        (<>{isSubbed ? <Button style={{marginLeft:\"10px\"}} onClick={handleJoin}>Joined</Button> : <Button onClick={handleBuyBtn} style={{marginLeft:\"10px\"}}>Join course</Button>}\n                                                        {isWatched ?  <Button style={{marginLeft:\"10px\"}} onClick={handleUnadded}>Added to Watchlist</Button> : <Button onClick={handleWatchlist} style={{marginLeft:\"10px\"}}>Add toWatchlist</Button>}</>)}\n                                        </> : <Button onClick={handleAnynomous} style={{marginLeft:\"10px\"}}>Join course</Button>}\n                    </div>\n                </Col>\n            </Row>\n            <Divider/>\n            <Row style={{marginTop:'20px', color: \"floralwhite\"}}>\n                <Col s={4} style={{textAlign:'center'}}>Last updated: {courseSelected.updatedAt}</Col>\n                <Col s={4} style={{textAlign:'center'}}>Rating count: {courseSelected.rateCount}</Col>\n                <Col s={4} style={{textAlign:'center'}}>Paticipant: {courseSelected.subCount}</Col>\n            </Row>\n            <Divider/>\n                <Row style={{marginTop:'20px', color: \"floralwhite\"}}>\n                    {courseSelected.lecturer.data ? \n                    <><Col s={5} style={{textAlign:'center'}}>Lecturer: {courseSelected.lecturer.data.firstName} {courseSelected.lecturer.data.lastName}</Col>\n                    <Col s={5} style={{textAlign:'center'}}>Email: {courseSelected.lecturer.data.email}</Col></>: <></>}\n                </Row>\n            <Divider/>\n            <Row className=\"full-description\">{courseSelected.fullDes}</Row>\n            <Divider/>\n            <Row className=\"full-description\"><ul>{syllabus ? <>{syllabus.map((vid) => (\n                       <li onClick={() => fetchMedia(vid.id)} key={vid.name}>\n                       {vid.name}\n                       \n                     </li>\n            ))}</> : <></>}</ul></Row>\n            {vidID ? <ReactPlayer url={\"http://localhost:8080/media/vid/\" + vidID} ></ReactPlayer> : <></>}\n            <Divider/></>) : <p>Course not found</p>}\n        </div>\n    )\n};\n\nconst mapStateToProps = state =>{\n    const courseSelected = state.courseReducer.courseSelected;\n    const isSubbed = state.courseReducer.isSubbed;\n    const isWatched = state.courseReducer.isWatched;\n    const isMine = state.courseReducer.isMine;\n    const syllabus = state.courseReducer.syllabus;\n\n    return {courseSelected, isSubbed, isWatched, isMine, syllabus}\n};\n\nexport default connect (mapStateToProps)(CourseDetail)","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/App/context/userContext.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/index.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Register/index.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/NavBar/index.js",["157","158"],"import React, { useState, useEffect } from 'react';\nimport {Navbar, Icon } from 'react-materialize'\nimport { Form, FormControl } from 'react-bootstrap'\nimport Dropdown from 'react-multilevel-dropdown'\nimport 'materialize-css'\nimport AuthOptions from '../App/authOptions'\nimport './style.css'\nimport {fetchAllCategory} from '../../redux/category'\nimport {connect } from 'react-redux'\nimport store from '../../redux/store'\nimport { Link } from 'react-router-dom';\n\nconst NavBar = ({categories = []}) => {\n  const [searchText, setSearchText] = useState();\n  useEffect(() => {\n    store.dispatch(fetchAllCategory());\n  }, [])\n\n  function keyPress(e){\n    if(e.charCode === 13){\n       console.log(e.target.value);\n       // put the login here\n    }\n }\n\n  return (\n    <React.Fragment>\n      <div>\n        <Navbar\n          alignLinks=\"right\"\n          className=\"nav-menu\"\n          brand={<Link className=\"brand-logo\" to=\"/\">Online Academy</Link>}\n          id=\"mobile-nav\"\n          menuIcon={<Icon>menu</Icon>}\n          options={{\n            draggable: false,\n            edge: 'right',\n            inDuration: 250,\n            onCloseEnd: null,\n            onCloseStart: null,\n            onOpenEnd: null,\n            onOpenStart: null,\n            outDuration: 200,\n            preventScrolling: true\n          }}>\n          <Dropdown menuClassName=\"dropdown-menu\" wrapperClassName=\"dropdown-wrapper\" buttonClassName=\"dropdown-button\" className=\"dropdown\" title='Category'>\n            {categories ? <>{categories.map((category, index) => (<Link to={\"/category/\" +`${category.category}`}>\n              <Dropdown.Item className=\"dropdown-item\"  key={index} name={category.category}>{category.category} \n              <SubMenu subcats={category.subCategories} key={index}></SubMenu>\n            </Dropdown.Item></Link>))}</> : <></>}\n          </Dropdown>\n          <Form inline>\n              <FormControl type=\"text\" value={searchText} onChange={(e) => setSearchText(e.target.value)} placeholder=\"Search\" className=\"mr-sm-2\" onKeyDown={keyPress}/>\n          </Form>\n          <AuthOptions></AuthOptions>\n        </Navbar>\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction SubMenu({subcats = []}){\n    return (\n      <Dropdown.Submenu>\n        {subcats.map((category, index) => (\n        <Link style={{backgroundColor: \"transparent\", color: \"#111111\"}} to={\"/subcat/\"+ `${category.name}`}><Dropdown.Item  key={index} name={category.name}>{category.name}</Dropdown.Item></Link>))}\n      </Dropdown.Submenu>)\n}\n\nconst mapStateToProps = state => {\n  const categories =  state.categoryReducer.categories;\n  return {\n      categories\n  }\n}\n\nexport default connect(mapStateToProps)(NavBar)","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Login/index.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/ShowCase/highLight.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/ShowCase/latest.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/ShowCase/mostViewed.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/user/index.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/category/index.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/course/index.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/UserProfile.js",["159","160","161","162"],"import React, { useContext } from 'react'\nimport 'materialize-css'\nimport {Row, Col, Divider, Button} from 'react-materialize'\nimport './style.css'\nimport userContext from '../App/context/userContext'\n\nexport default function UserProfile(){\n    const {userData} = useContext(userContext);\n    const changePassword = () =>{\n        \n    }\n    \n    return(\n        <div>\n            {userData.user ? \n            (<><Row>\n                <Col className=\"thumbnail\" >\n                    <>\n                        {(userData.user.role=='student' || userData.user.role=='lecturer') ? (<img className=\"detail-thumbnail\" src=\"user-student.png\" width=\"200\" height=\"200\"></img>) : \n                        (<img className=\"detail-thumbnail\" src=\"user-lecturer.png\" width=\"200\" height=\"200\"></img>)}\n                    </>\n                </Col>\n                <Col className=\"detail-description\" s={9}>\n                    <div >\n                        <Row> <div className=\"course-name\"> <p className=\"label\">Email: {userData.user.email}</p></div> </Row>\n                        <Row> <div className=\"course-name\"> <p className=\"label\">Password: <Button onClick={changePassword} style={{marginRight: \"10px\"}}>Change Password</Button></p></div> </Row>\n                    </div>\n                </Col>\n            </Row>\n            <Divider/></>) : <h2>You are not logged in</h2>}\n        </div>\n    )\n    \n}","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/studentCourse.js",["163","164"],"import React, { useContext, useEffect, useState } from 'react'\nimport 'materialize-css'\nimport {Tab, Tabs, Table, Button} from 'react-materialize'\nimport userContext from '../App/context/userContext'\nimport {connect} from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {fetchStudentSubList, fetchStudentWatchlist} from '../../redux/user'\nimport store from '../../redux/store'\nconst StudentCourse = ({watchList=[], subList = []}) => {\n    const { userData } = useContext(userContext);\n\n    useEffect(() => {\n        store.dispatch(fetchStudentWatchlist(userData.user.id))\n        store.dispatch(fetchStudentSubList(userData.user.id))\n    },[]);\n\n    return(\n        <Tabs className=\"tabs z-depth-1\">\n            <Tab className=\"tab\" active\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"Watchlist\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th data-field=\"id\">\n                                    Name\n                                </th>\n                                <th data-field=\"name\">\n                                    Subcription count\n                                </th>\n                                <th data-field=\"price\">\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {watchList ? \n                            (<>{watchList.map((course, index) => (<tr key={index}>\n                                <td>\n                                    <Link key=\"1\" to={\"/course/\"+ course._id}>{course.title}</Link>\n                                </td>\n                                <td>\n                                    {course.subCount}\n                                </td>\n                                <td>\n                                   <Button style={{marginRight: \"10px\"}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\n                                </td>\n                            </tr>))}</>) : <></>}\n                        </tbody>\n                    </Table>\n                </Tab>\n                <Tab className=\"tab\"\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"Subcription\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th data-field=\"id\">\n                                    Name\n                                </th>\n                                <th data-field=\"name\">\n                                    Subcription count\n                                </th>\n                                <th data-field=\"price\">\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {subList ? \n                            (<>{subList.map((course, index) => (<tr key={index}>\n                                <td>\n                                    <Link key=\"1\" to={\"/course/\"+ course._id}>{course.title}</Link>\n                                </td>\n                                <td>\n                                    {course.subCount}\n                                </td>\n                                <td>\n                                   <Button style={{marginRight: \"10px\"}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\n                                </td>\n                            </tr>))}</>) : <></>}\n                        </tbody>\n                    </Table>\n                </Tab>\n            \n        </Tabs>\n    )    \n}\n\nconst mapStateToProps = state => {\n    const watchList = state.userReducer.watchList;\n    const subList = state.userReducer.subList;\n    return {\n        watchList, subList\n    }\n}\n\nexport default connect(mapStateToProps)(StudentCourse)","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/CourseItem/index.js",["165","166"],"import React from 'react';\nimport 'materialize-css'\nimport {Link} from 'react-router-dom'\nimport { Icon, Col, Card, CardTitle, Preloader} from 'react-materialize'\nimport './style.css'\nimport Axios from 'axios';\n\nexport default function CourseItem({course}) {\n    const handleClick = async () =>{\n        console.log(course._id)\n        Axios.put(\"http://localhost:8080/courses/view-count-increment/\"+ course._id)\n    }\n\n    return (\n        <div >\n            {course ? \n            <div  style={{ cursor: 'pointer', marginRight: \"10px\"}}>\n                <Col m={6} s={12}>\n                <Card\n                actions={[<Link key=\"1\" to={\"/course/\"+course._id} onClick={handleClick}>Go to course</Link>]}\n                closeIcon={<Icon>close</Icon>}\n                header={<img className=\"detail-thumbnail\" src={course.thumbnail} width=\"100\" height=\"100\"></img>}\n                horizontal\n                revealIcon={<Icon>more_vert</Icon>} className=\"description\"\n                >\n                {course.title}\n                {course.briefDes}\n                </Card>\n            </Col></div> : <Preloader/>}\n        </div>\n    )\n}\n\n","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/adminDashboard.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Dashboard/lecturerCourse.js",["167","168"],"import React, {useContext, useEffect} from 'react'\nimport 'materialize-css'\nimport {Tab, Tabs, Button, Table} from 'react-materialize'\nimport { Link } from 'react-router-dom'\nimport {fetchLecturerCourse} from '../../redux/user'\nimport {connect } from 'react-redux'\nimport store from '../../redux/store'\nimport userContext from '../App/context/userContext'\n\nconst LecturerCourse = ({lecturerCourse = []}) =>{\n    const { userData } = useContext(userContext);\n\n    useEffect(() => {\n        store.dispatch(fetchLecturerCourse(userData.user.id))\n    },[]);\n    const handleAddCourse = () =>{\n\n    }\n\n    return(\n        <>\n        \n        <Tabs className=\"tabs z-depth-1\">\n        <Tab className=\"tab\" active\n                    options={{\n                    duration: 300,\n                    onShow: null,\n                    responsiveThreshold: Infinity,\n                    swipeable: false\n                    }}\n                    title=\"My course\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th data-field=\"id\">\n                                    Name\n                                </th>\n                                <th data-field=\"name\">\n                                    Subcription count\n                                </th>\n                                <th data-field=\"price\">\n                                <Link to=\"/addnewcourse\">\n                                    <Button onclick={handleAddCourse}>Post new course</Button>\n                                </Link>\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {lecturerCourse ? \n                            (<>{lecturerCourse.map((course, index) => (<tr key={index}>\n                                <td>\n                                <Link key=\"1\" to={\"/course/\"+ course._id}>{course.title}</Link>\n                                </td>\n                                <td>\n                                    {course.subCount}\n                                </td>\n                                <td>\n                                    <Link to={\"/addchapter/\" + `${course.id}`}><Button style={{marginRight: \"10px\"}}><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></Button></Link>\n                                   <Button style={{marginRight: \"10px\"}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\n                                </td>\n                            </tr>))}</>) : <></>}\n                        </tbody>\n                    </Table>\n                </Tab>\n        </Tabs>\n        </>\n    )    \n}\n\nconst mapStateToProps = state => {\n    const lecturerCourse = state.userReducer.lecturerCourse;\n    return {\n         lecturerCourse\n    }\n}\n\nexport default connect(mapStateToProps)(LecturerCourse)","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/App/authOptions.js",["169","170","171"],"import React, { useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport UserContext from \"./context/userContext\";\nimport {Button, Divider, Dropdown} from 'react-materialize'\nimport 'materialize-css'\nimport './style.css'\n\nexport default function AuthOptions() {\n  const { userData, setUserData } = useContext(UserContext);\n\n  const history = useHistory();\n\n  const register = () => history.push(\"/register\");\n  const login = () => history.push(\"/login\");\n  const logout = () => {\n    setUserData({\n      token: undefined,\n      user: undefined,\n    });\n    localStorage.setItem(\"auth-token\", \"\");\n    history.push(\"/\");\n  };\n\n  return (\n    <React.Fragment>\n      {userData.user ? (\n        <Dropdown\n        id=\"Dropdown_user\"\n        options={{\n          alignment: 'left',\n          autoTrigger: true,\n          closeOnClick: true,\n          constrainWidth: true,\n          container: null,\n          coverTrigger: false,\n          hover: false,\n          inDuration: 150,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          outDuration: 250\n        }}\n        trigger={<a style={{display: \"block\" }}><img src=\"user-student.png\" style={{ height:\"45px\", width: \"45px\"}}/></a>}\n        >\n          <Link to=\"/dashboard\" >Dashboard</Link>\n          <a onClick={logout} >Log out</a>\n        <Divider></Divider>\n      </Dropdown>\n        \n        ) : (\n          <>\n              <Button onClick={register} style={{marginRight: \"10px\"}}>Sign up</Button>\n              <Button onClick={login} style={{marginRight: \"10px\"}}>Log in</Button>\n            </>\n          )}\n    </React.Fragment>\n  );\n}","/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/utils/errorHandler.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/redux/actions/types.js",[],"/home/tringuyen/Desktop/WNC-FinalProject-OnlineAcademy/frontend/src/components/Carousel/index.js",[],["172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":26,"column":9,"nodeType":"180","messageId":"181","endLine":26,"endColumn":16},{"ruleId":"178","severity":1,"message":"182","line":1,"column":27,"nodeType":"180","messageId":"181","endLine":1,"endColumn":37},{"ruleId":"183","severity":1,"message":"184","line":31,"column":20,"nodeType":"185","messageId":"186","endLine":31,"endColumn":22},{"ruleId":"178","severity":1,"message":"187","line":21,"column":11,"nodeType":"180","messageId":"181","endLine":21,"endColumn":19},{"ruleId":"178","severity":1,"message":"188","line":27,"column":11,"nodeType":"180","messageId":"181","endLine":27,"endColumn":21},{"ruleId":"178","severity":1,"message":"187","line":17,"column":11,"nodeType":"180","messageId":"181","endLine":17,"endColumn":19},{"ruleId":"178","severity":1,"message":"189","line":46,"column":11,"nodeType":"180","messageId":"181","endLine":46,"endColumn":21},{"ruleId":"178","severity":1,"message":"190","line":1,"column":28,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},{"ruleId":"178","severity":1,"message":"191","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":24,"column":7,"nodeType":"194","endLine":24,"endColumn":9,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":80,"column":21,"nodeType":"198","endLine":82,"endColumn":52},{"ruleId":"199","severity":1,"message":"200","line":47,"column":90,"nodeType":"185","messageId":"201","endLine":47,"endColumn":91},{"ruleId":"199","severity":1,"message":"200","line":66,"column":88,"nodeType":"185","messageId":"201","endLine":66,"endColumn":89},{"ruleId":"183","severity":1,"message":"202","line":19,"column":45,"nodeType":"185","messageId":"186","endLine":19,"endColumn":47},{"ruleId":"183","severity":1,"message":"202","line":19,"column":78,"nodeType":"185","messageId":"186","endLine":19,"endColumn":80},{"ruleId":"196","severity":1,"message":"197","line":19,"column":95,"nodeType":"198","endLine":19,"endColumn":177},{"ruleId":"196","severity":1,"message":"197","line":20,"column":26,"nodeType":"198","endLine":20,"endColumn":109},{"ruleId":"178","severity":1,"message":"190","line":1,"column":40,"nodeType":"180","messageId":"181","endLine":1,"endColumn":48},{"ruleId":"192","severity":1,"message":"203","line":15,"column":7,"nodeType":"194","endLine":15,"endColumn":9,"suggestions":"204"},{"ruleId":"178","severity":1,"message":"205","line":4,"column":27,"nodeType":"180","messageId":"181","endLine":4,"endColumn":36},{"ruleId":"196","severity":1,"message":"197","line":22,"column":25,"nodeType":"198","endLine":22,"endColumn":107},{"ruleId":"192","severity":1,"message":"203","line":15,"column":7,"nodeType":"194","endLine":15,"endColumn":9,"suggestions":"206"},{"ruleId":"199","severity":1,"message":"200","line":58,"column":62,"nodeType":"185","messageId":"201","endLine":58,"endColumn":63},{"ruleId":"207","severity":1,"message":"208","line":44,"column":18,"nodeType":"198","endLine":44,"endColumn":49},{"ruleId":"196","severity":1,"message":"197","line":44,"column":49,"nodeType":"198","endLine":44,"endColumn":118},{"ruleId":"207","severity":1,"message":"208","line":47,"column":11,"nodeType":"198","endLine":47,"endColumn":32},{"ruleId":"174","replacedBy":"209"},{"ruleId":"176","replacedBy":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'children' is assigned a value but never used.","'onAddChild' is assigned a value but never used.","'chapterRef' is assigned a value but never used.","'useState' is defined but never used.","'Row' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'userData.user'. Either include them or remove the dependency array.","ArrayExpression",["213"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'userData.user.id'. Either include it or remove the dependency array.",["214"],"'CardTitle' is defined but never used.",["215"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["211"],["212"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"218","fix":"220"},"Update the dependencies array to be: [id, userData.user]",{"range":"221","text":"222"},"Update the dependencies array to be: [userData.user.id]",{"range":"223","text":"224"},{"range":"225","text":"224"},[1135,1137],"[id, userData.user]",[653,655],"[userData.user.id]",[549,551]]